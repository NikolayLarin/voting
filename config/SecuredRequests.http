# For a quick start check out our HTTP Requests collection (Tools|HTTP Client|Open HTTP Requests Collection) or
# paste cURL into the file and request will be converted to HTTP Request format.
#
# Following HTTP Request Live Templates are available:
# * 'gtrp' and 'gtr' create a GET request with or without query parameters;
# * 'ptr' and 'ptrp' create a POST request with a simple or parameter-like body;
# * 'mptr' and 'fptr' create a POST request to submit a form with a text or file field (multipart/form-data);


################   All Create requests MUST RUNS ONCE   ################
################    and must start from the beginning   ################
################         to save entities id's          ################


################           AdminRestController          ################
# createWithLocation restaurant
POST http://localhost:8080/voting/auth/admin/restaurants
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password
Content-Type: application/json

{
  "name": "Новый ресторан"
}

###

# update restaurant
PUT http://localhost:8080/voting/auth/admin/restaurants/100030
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password
Content-Type: application/json

{
  "name": "New Restaurant updated"
}

###

# createWithLocation dish for restaurant
POST http://localhost:8080/voting/auth/admin/restaurants/100030/dishes
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password
Content-Type: application/json

{
  "date": "2020-01-17",
  "name": "New Dish",
  "price": 2200
}

###
# update dish for restaurant
PUT http://localhost:8080/voting/auth/admin/restaurants/100030/dishes/100031
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password
Content-Type: application/json

{
  "date": "2020-01-17",
  "name": "New Dish Updated",
  "price": 2200
}

###

#delete dish
DELETE http://localhost:8080/voting/auth/admin/restaurants/100030/dishes/100031
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password

###

#delete restaurant
DELETE http://localhost:8080/voting/auth/admin/restaurants/100030
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password

###
###############################  end  ##################################


################           VoteRestController           ################
#getAll votes of current user)
GET http://localhost:8080/voting/auth/votes
#Authorization: Basic admin@gmail.com admin
Authorization: Basic user@gmail.com password

###

#get vote of current user
GET http://localhost:8080/voting/auth/votes/100028
Authorization: Basic user@gmail.com password

###

#create vote of current user for restaurant
POST http://localhost:8080/voting/auth/votes/100002
Authorization: Basic user@gmail.com password

###

# update vote of current user for restaurant
# after 11:00 AM throw: Voting time expired at 11:00 AM
PUT http://localhost:8080/voting/auth/votes/100003
Authorization: Basic user@gmail.com password
Content-Type: application/json

{
  "id": 100032,
  "date": "2020-01-17"
}

###

# delete vote of current user
DELETE http://localhost:8080/voting/auth/votes/100032
Authorization: Basic user@gmail.com password

###
###############################  end  ##################################


################          ProfileRestController         ################
# get admin
GET http://localhost:8080/voting/auth/profile
Authorization: Basic admin@gmail.com admin
#Authorization: Basic user@gmail.com password

###

# get user
GET http://localhost:8080/voting/auth/profile
#Authorization: Basic admin@gmail.com admin
Authorization: Basic user@gmail.com password

###

# get admin by email
GET http://localhost:8080/voting/auth/profile/by?email=admin@gmail.com
Authorization: Basic admin@gmail.com admin

###

# get user by email
GET http://localhost:8080/voting/auth/profile/by?email=user@gmail.com
Authorization: Basic user@gmail.com password

###

# createWithLocation user
POST http://localhost:8080/voting/auth/profile/register
Content-Type: application/json

{
  "email": "newUser@gmail.com",
  "password": "newPassword",
  "roles": [
    "ROLE_USER"
  ]
}

###

# delete user (all votes will be deleted too)
DELETE http://localhost:8080/voting/auth/profile
Authorization: Basic user@gmail.com password

###

###############################  end  ##################################